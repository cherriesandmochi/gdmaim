extends RefCounted


const GLOBALS : Array[String] = [
	# GDScript
	"_static_init",
	"Color8",
	"assert",
	"char",
	"convert",
	"dict_to_inst",
	"get_stack",
	"inst_to_dict",
	"is_instance_of",
	"len",
	"load",
	"preload",
	"print_debug",
	"print_stack",
	"range",
	"type_exists",
	
	"PI",
	"TAU",
	"INF",
	"NAN",
	
	# @GlobalScope
	"abs",
	"absf",
	"absi",
	"acos",
	"acosh",
	"angle_difference",
	"asin",
	"asinh",
	"atan",
	"atan2",
	"atanh",
	"bezier_derivative",
	"bezier_interpolate",
	"bytes_to_var",
	"bytes_to_var_with_objects",
	"ceil",
	"ceilf",
	"ceili",
	"clamp",
	"clampf",
	"clampi",
	"cos",
	"cosh",
	"cubic_interpolate",
	"cubic_interpolate_angle",
	"cubic_interpolate_angle_in_time",
	"cubic_interpolate_in_time",
	"db_to_linear",
	"deg_to_rad",
	"ease",
	"error_string",
	"exp",
	"floor",
	"floorf",
	"floori",
	"fmod",
	"fposmod",
	"hash",
	"instance_from_id",
	"inverse_lerp",
	"is_equal_approx",
	"is_finite",
	"is_inf",
	"is_instance_id_valid",
	"is_instance_valid",
	"is_nan",
	"is_same",
	"is_zero_approx",
	"lerp",
	"lerp_angle",
	"lerpf",
	"linear_to_db",
	"log",
	"max",
	"maxf",
	"maxi",
	"min",
	"minf",
	"mini",
	"move_toward",
	"nearest_po2",
	"pingpong",
	"posmod",
	"pow",
	"print",
	"print_rich",
	"print_verbose",
	"printerr",
	"printraw",
	"prints",
	"printt",
	"push_error",
	"push_warning",
	"rad_to_deg",
	"rand_from_seed",
	"randf",
	"randf_range",
	"randfn",
	"randi",
	"randi_range",
	"randomize",
	"remap",
	"rid_allocate_id",
	"rid_from_int64",
	"rotate_toward",
	"round",
	"roundf",
	"roundi",
	"seed",
	"sign",
	"signf",
	"signi",
	"sin",
	"sinh",
	"smoothstep",
	"snapped",
	"snappedf",
	"snappedi",
	"sqrt",
	"step_decimals",
	"str",
	"str_to_var",
	"tan",
	"tanh",
	"type_convert",
	"type_string",
	"typeof",
	"var_to_bytes",
	"var_to_bytes_with_objects",
	"var_to_str",
	"weakref",
	"wrap",
	"wrapf",
	"wrapi",
	
	# Common enum keys
	"VERTICAL",
	"HORIZONTAL",
	"CLOCKWISE",
	"COUNTERCLOCKWISE",
	"OK",
	"FAILED",
]
const VARIANTS : Array[Dictionary] = [
	{
		"class": "AABB",
		"properties": [
			"end",
			"position",
			"size",
		],
		"methods": [
			"abs",
			"encloses",
			"expand",
			"get_center",
			"get_endpoint",
			"get_longest_axis",
			"get_longest_axis_index",
			"get_longest_axis_size",
			"get_shortest_axis",
			"get_shortest_axis_index",
			"get_shortest_axis_size",
			"get_support",
			"get_volume",
			"grow",
			"has_point",
			"has_surface",
			"has_volume",
			"intersection",
			"intersects",
			"intersects_plane",
			"intersects_ray",
			"intersects_segment",
			"is_equal_approx",
			"is_finite",
			"merge",
		],
	},
	{
		"class": "Array",
		"methods": [
			"all",
			"any",
			"append",
			"append_array",
			"assign",
			"back",
			"bsearch",
			"bsearch_custom",
			"clear",
			"count",
			"duplicate",
			"erase",
			"fill",
			"filter",
			"find",
			"front",
			"get_typed_builtin",
			"get_typed_class_name",
			"get_typed_script",
			"has",
			"hash",
			"insert",
			"is_empty",
			"is_read_only",
			"is_same_typed",
			"is_typed",
			"make_read_only",
			"map",
			"max",
			"min",
			"pick_random",
			"pop_at",
			"pop_back",
			"pop_front",
			"push_back",
			"push_front",
			"reduce",
			"remove_at",
			"resize",
			"reverse",
			"rfind",
			"shuffle",
			"size",
			"slice",
			"sort",
			"sort_custom",
		],
	},
	{
		"class": "Basis",
		"constants": [
			"IDENTITY",
			"FLIP_X",
			"FLIP_Y",
			"FLIP_Z",
		],
		"properties": [
			"x",
			"y",
			"z",
		],
		"methods": [
			"determinant",
			"from_euler",
			"from_scale",
			"get_euler",
			"get_rotation_quaternion",
			"get_scale",
			"inverse",
			"is_conformal",
			"is_equal_approx",
			"is_finite",
			"looking_at",
			"orthonormalized",
			"rotated",
			"scaled",
			"slerp",
			"tdotx",
			"tdoty",
			"tdotz",
			"transposed",
		],
	},
	{
		"class": "Callable",
		"properties": [
		],
		"methods": [
			"bind",
			"bindv",
			"call",
			"call_deferred",
			"callv",
			"get_bound_arguments",
			"get_bound_arguments_count",
			"get_method",
			"get_object",
			"get_object_id",
			"hash",
			"is_custom",
			"is_null",
			"is_standard",
			"is_valid",
			"rpc",
			"rpc_id",
			"unbind",
		],
	},
	{
		"class": "Color",
		"constants": [
			"ALICE_BLUE",
			"ANTIQUE_WHITE",
			"AQUA",
			"AQUAMARINE",
			"AZURE",
			"BEIGE",
			"BISQUE",
			"BLACK",
			"BLANCHED_ALMOND",
			"BLUE",
			"BLUE_VIOLET",
			"BROWN",
			"BURLYWOOD",
			"CADET_BLUE",
			"CHARTREUSE",
			"CHOCOLATE",
			"CORAL",
			"CORNFLOWER_BLUE",
			"CORNSILK",
			"CRIMSON",
			"CYAN",
			"DARK_BLUE",
			"DARK_CYAN",
			"DARK_GOLDENROD",
			"DARK_GRAY",
			"DARK_GREEN",
			"DARK_KHAKI",
			"DARK_MAGENTA",
			"DARK_OLIVE_GREEN",
			"DARK_ORANGE",
			"DARK_ORCHID",
			"DARK_RED",
			"DARK_SALMON",
			"DARK_SEA_GREEN",
			"DARK_SLATE_BLUE",
			"DARK_SLATE_GRAY",
			"DARK_TURQUOISE",
			"DARK_VIOLET",
			"DEEP_PINK",
			"DEEP_SKY_BLUE",
			"DIM_GRAY",
			"DODGER_BLUE",
			"FIREBRICK",
			"FLORAL_WHITE",
			"FOREST_GREEN",
			"FUCHSIA",
			"GAINSBORO",
			"GHOST_WHITE",
			"GOLD",
			"GOLDENROD",
			"GRAY",
			"GREEN",
			"GREEN_YELLOW",
			"HONEYDEW",
			"HOT_PINK",
			"INDIAN_RED",
			"INDIGO",
			"IVORY",
			"KHAKI",
			"LAVENDER",
			"LAVENDER_BLUSH",
			"LAWN_GREEN",
			"LEMON_CHIFFON",
			"LIGHT_BLUE",
			"LIGHT_CORAL",
			"LIGHT_CYAN",
			"LIGHT_GOLDENROD",
			"LIGHT_GRAY",
			"LIGHT_GREEN",
			"LIGHT_PINK",
			"LIGHT_SALMON",
			"LIGHT_SEA_GREEN",
			"LIGHT_SKY_BLUE",
			"LIGHT_SLATE_GRAY",
			"LIGHT_STEEL_BLUE",
			"LIGHT_YELLOW",
			"LIME",
			"LIME_GREEN",
			"LINEN",
			"MAGENTA",
			"MAROON",
			"MEDIUM_AQUAMARINE",
			"MEDIUM_BLUE",
			"MEDIUM_ORCHID",
			"MEDIUM_PURPLE",
			"MEDIUM_SEA_GREEN",
			"MEDIUM_SLATE_BLUE",
			"MEDIUM_SPRING_GREEN",
			"MEDIUM_TURQUOISE",
			"MEDIUM_VIOLET_RED",
			"MIDNIGHT_BLUE",
			"MINT_CREAM",
			"MISTY_ROSE",
			"MOCCASIN",
			"NAVAJO_WHITE",
			"NAVY_BLUE",
			"OLD_LACE",
			"OLIVE",
			"OLIVE_DRAB",
			"ORANGE",
			"ORANGE_RED",
			"ORCHID",
			"PALE_GOLDENROD",
			"PALE_GREEN",
			"PALE_TURQUOISE",
			"PALE_VIOLET_RED",
			"PAPAYA_WHIP",
			"PEACH_PUFF",
			"PERU",
			"PINK",
			"PLUM",
			"POWDER_BLUE",
			"PURPLE",
			"REBECCA_PURPLE",
			"RED",
			"ROSY_BROWN",
			"ROYAL_BLUE",
			"SADDLE_BROWN",
			"SALMON",
			"SANDY_BROWN",
			"SEA_GREEN",
			"SEASHELL",
			"SIENNA",
			"SILVER",
			"SKY_BLUE",
			"SLATE_BLUE",
			"SLATE_GRAY",
			"SNOW",
			"SPRING_GREEN",
			"STEEL_BLUE",
			"TAN",
			"TEAL",
			"THISTLE",
			"TOMATO",
			"TRANSPARENT",
			"TURQUOISE",
			"VIOLET",
			"WEB_GRAY",
			"WEB_GREEN",
			"WEB_MAROON",
			"WEB_PURPLE",
			"WHEAT",
			"WHITE",
			"WHITE_SMOKE",
			"YELLOW",
			"YELLOW_GREEN",
		],
		"properties": [
			"a", "a8",
			"b", "b8",
			"g", "g8",
			"h",
			"r", "r8",
			"s",
			"v",
		],
		"methods": [
			"blend",
			"clamp",
			"darkened",
			"from_hsv",
			"from_ok_hsl",
			"from_rgbe9995",
			"from_string",
			"get_luminance",
			"hex",
			"hex64",
			"html",
			"html_is_valid",
			"inverted",
			"is_equal_approx",
			"lerp",
			"lightened",
			"linear_to_srgb",
			"srgb_to_linear",
			"to_abgr32",
			"to_abgr64",
			"to_argb32",
			"to_argb64",
			"to_html",
			"to_rgba32",
			"to_rgba64",
		],
	},
	{
		"class": "Dictionary",
		"properties": [
		],
		"methods": [
			"clear",
			"duplicate",
			"erase",
			"find_key",
			"get",
			"has",
			"has_all",
			"hash",
			"is_empty",
			"is_read_only",
			"keys",
			"make_read_only",
			"merge",
			"size",
			"values",
		],
	},
	{
		"class": "NodePath",
		"properties": [
		],
		"methods": [
			"get_as_property_path",
			"get_concatenated_names",
			"get_concatenated_subnames",
			"get_name",
			"get_name_count",
			"get_subname",
			"get_subname_count",
			"hash",
			"is_absolute",
			"is_empty",
		],
	},
	{
		"class": "Object",
		"properties": [
		],
		"methods": [
			"_get",
			"_get_property_list",
			"_init",
			"_notification",
			"_property_can_revert",
			"_property_get_revert",
			"_set",
			"_to_string",
			"_validate_property",
			"add_user_signal",
			"call",
			"call_deferred",
			"callv",
			"can_translate_messages",
			"cancel_free",
			"connect",
			"disconnect",
			"emit_signal",
			"free",
			"get",
			"get_class",
			"get_incoming_connections",
			"get_indexed",
			"get_instance_id",
			"get_meta",
			"get_meta_list",
			"get_method_list",
			"get_property_list",
			"get_script",
			"get_signal_connection_list",
			"get_signal_list",
			"has_meta",
			"has_method",
			"has_signal",
			"has_user_signal",
			"is_blocking_signals",
			"is_class",
			"is_connected",
			"is_queued_for_deletion",
			"notification",
			"notify_property_list_changed",
			"property_can_revert",
			"property_get_revert",
			"remove_meta",
			"set",
			"set_block_signals",
			"set_deferred",
			"set_indexed",
			"set_message_translation",
			"set_meta",
			"set_script",
			"to_string",
			"tr",
			"tr_n",
		],
		"signals": [
			"property_list_changed",
			"script_changed",
		],
	},
	{
		"class": "PackedByteArray",
		"properties": [
		],
		"methods": [
			"append",
			"append_array",
			"bsearch",
			"clear",
			"compress",
			"count",
			"decode_double",
			"decode_float",
			"decode_half",
			"decode_s8",
			"decode_s16",
			"decode_s32",
			"decode_s64",
			"decode_u8",
			"decode_u16",
			"decode_u32",
			"decode_u64",
			"decode_var",
			"decode_var_size",
			"decompress",
			"decompress_dynamic",
			"duplicate",
			"encode_double",
			"encode_float",
			"encode_half",
			"encode_s8",
			"encode_s16",
			"encode_s32",
			"encode_s64",
			"encode_u8",
			"encode_u16",
			"encode_u32",
			"encode_u64",
			"encode_var",
			"fill",
			"find",
			"get_string_from_ascii",
			"get_string_from_utf8",
			"get_string_from_utf16",
			"get_string_from_utf32",
			"get_string_from_wchar",
			"has",
			"has_encoded_var",
			"hex_encode",
			"insert",
			"is_empty",
			"push_back",
			"remove_at",
			"resize",
			"reverse",
			"rfind",
			"set",
			"size",
			"slice",
			"sort",
			"to_float32_array",
			"to_float64_array",
			"to_int32_array",
			"to_int64_array",
		],
	},
	{
		"class": "PackedColorArray",
	},
	{
		"class": "PackedFloat32Array",
	},
	{
		"class": "PackedFloat64Array",
	},
	{
		"class": "PackedInt32Array",
	},
	{
		"class": "PackedInt64Array",
	},
	{
		"class": "PackedStringArray",
	},
	{
		"class": "PackedVector2Array",
	},
	{
		"class": "PackedVector3Array",
	},
	{
		"class": "Plane",
		"constants": [
			"PLANE_YZ",
			"PLANE_XZ",
			"PLANE_XY",
		],
		"properties": [
			"d",
			"normal",
			"x",
			"y",
			"z",
		],
		"methods": [
			"distance_to",
			"get_center",
			"has_point",
			"intersect_3",
			"intersects_ray",
			"intersects_segment",
			"is_equal_approx",
			"is_finite",
			"is_point_over",
			"normalized",
			"project",
		],
	},
	{
		"class": "Projection",
		"constants": [
			"PLANE_NEAR",
			"PLANE_FAR",
			"PLANE_LEFT",
			"PLANE_TOP",
			"PLANE_RIGHT",
			"PLANE_BOTTOM",
			"IDENTITY",
			"ZERO",
		],
		"properties": [
			"w",
			"x",
			"y",
			"z",
		],
		"methods": [
			"create_depth_correction",
			"create_fit_aabb",
			"create_for_hmd",
			"create_frustum",
			"create_frustum_aspect",
			"create_light_atlas_rect",
			"create_orthogonal",
			"create_orthogonal_aspect",
			"create_perspective",
			"create_perspective_hmd",
			"determinant",
			"flipped_y",
			"get_aspect",
			"get_far_plane_half_extents",
			"get_fov",
			"get_fovy",
			"get_lod_multiplier",
			"get_pixels_per_meter",
			"get_projection_plane",
			"get_viewport_half_extents",
			"get_z_far",
			"get_z_near",
			"inverse",
			"is_orthogonal",
			"jitter_offseted",
			"perspective_znear_adjusted",
		],
	},
	{
		"class": "Quaternion",
		"properties": [
			"w",
			"x",
			"y",
			"z",
		],
		"methods": [
			"angle_to",
			"dot",
			"exp",
			"from_euler",
			"get_angle",
			"get_axis",
			"get_euler",
			"inverse",
			"is_equal_approx",
			"is_finite",
			"is_normalized",
			"length",
			"length_squared",
			"log",
			"normalized",
			"slerp",
			"slerpni",
			"spherical_cubic_interpolate",
			"spherical_cubic_interpolate_in_time",
		],
	},
	{
		"class": "Rect2",
		"properties": [
			"end",
			"position",
			"size",
		],
		"methods": [
			"abs",
			"encloses",
			"expand",
			"get_area",
			"get_center",
			"grow",
			"grow_individual",
			"grow_side",
			"has_area",
			"has_point",
			"intersection",
			"intersects",
			"is_equal_approx",
			"is_finite",
			"merge",
		],
	},
	{
		"class": "Rect2i",
	},
	{
		"class": "RID",
		"properties": [
		],
		"methods": [
			"get_id",
			"is_valid",
		],
	},
	{
		"class": "Signal",
		"properties": [
		],
		"methods": [
			"connect",
			"disconnect",
			"emit",
			"get_connections",
			"get_name",
			"get_object",
			"get_object_id",
			"is_connected",
			"is_null",
		],
	},
	{
		"class": "String",
		"properties": [
		],
		"methods": [
			"begins_with",
			"bigrams",
			"bin_to_int",
			"c_escape",
			"c_unescape",
			"capitalize",
			"casecmp_to",
			"chr",
			"contains",
			"count",
			"countn",
			"dedent",
			"ends_with",
			"erase",
			"find",
			"findn",
			"format",
			"get_base_dir",
			"get_basename",
			"get_extension",
			"get_file",
			"get_slice",
			"get_slice_count",
			"get_slicec",
			"hash",
			"hex_decode",
			"hex_to_int",
			"humanize_size",
			"indent",
			"insert",
			"is_absolute_path",
			"is_empty",
			"is_relative_path",
			"is_subsequence_of",
			"is_subsequence_ofn",
			"is_valid_filename",
			"is_valid_float",
			"is_valid_hex_number",
			"is_valid_html_color",
			"is_valid_identifier",
			"is_valid_int",
			"is_valid_ip_address",
			"join",
			"json_escape",
			"left",
			"length",
			"lpad",
			"lstrip",
			"match",
			"matchn",
			"md5_buffer",
			"md5_text",
			"naturalcasecmp_to",
			"naturalnocasecmp_to",
			"nocasecmp_to",
			"num",
			"num_int64",
			"num_scientific",
			"num_uint64",
			"pad_decimals",
			"pad_zeros",
			"path_join",
			"repeat",
			"replace",
			"replacen",
			"reverse",
			"rfind",
			"rfindn",
			"right",
			"rpad",
			"rsplit",
			"rstrip",
			"sha1_buffer",
			"sha1_text",
			"sha256_buffer",
			"sha256_text",
			"similarity",
			"simplify_path",
			"split",
			"split_floats",
			"strip_edges",
			"strip_escapes",
			"substr",
			"to_ascii_buffer",
			"to_camel_case",
			"to_float",
			"to_int",
			"to_lower",
			"to_pascal_case",
			"to_snake_case",
			"to_upper",
			"to_utf8_buffer",
			"to_utf16_buffer",
			"to_utf32_buffer",
			"to_wchar_buffer",
			"trim_prefix",
			"trim_suffix",
			"unicode_at",
			"uri_decode",
			"uri_encode",
			"validate_filename",
			"validate_node_name",
			"xml_escape",
			"xml_unescape",
		],
	},
	{
		"class": "StringName",
		"properties": [
		],
		"methods": [
		],
	},
	{
		"class": "Transform2D",
		"properties": [
			"origin",
			"x",
			"y",
		],
		"methods": [
			"affine_inverse",
			"basis_xform",
			"basis_xform_inv",
			"determinant",
			"get_origin",
			"get_rotation",
			"get_scale",
			"get_skew",
			"interpolate_with",
			"inverse",
			"is_conformal",
			"is_equal_approx",
			"is_finite",
			"looking_at",
			"orthonormalized",
			"rotated",
			"rotated_local",
			"scaled",
			"scaled_local",
			"translated",
			"translated_local",
		],
	},
	{
		"class": "Transform3D",
	},
	{
		"class": "Vector2",
		"constants": [
			"AXIS_X",
			"AXIS_Y",
			"ZERO",
			"ONE",
			"INF",
			"GDS",
			"INF",
			"LEFT",
			"RIGHT",
			"UP",
			"DOWN",
		],
		"properties": [
			"x",
			"y",
		],
		"methods": [
			"abs",
			"angle",
			"angle_to",
			"angle_to_point",
			"aspect",
			"bezier_derivative",
			"bezier_interpolate",
			"bounce",
			"ceil",
			"clamp",
			"cross",
			"cubic_interpolate",
			"cubic_interpolate_in_time",
			"direction_to",
			"distance_squared_to",
			"distance_to",
			"dot",
			"floor",
			"from_angle",
			"is_equal_approx",
			"is_finite",
			"is_normalized",
			"is_zero_approx",
			"length",
			"length_squared",
			"lerp",
			"limit_length",
			"max_axis_index",
			"min_axis_index",
			"move_toward",
			"normalized",
			"orthogonal",
			"posmod",
			"posmodv",
			"project",
			"reflect",
			"rotated",
			"round",
			"sign",
			"slerp",
			"slide",
			"snapped",
		],
	},
	{
		"class": "Vector2i",
		"constants": [
			"MIN",
			"MAX",
		],
	},
	{
		"class": "Vector3",
		"constants": [
			"AXIS_X",
			"AXIS_Y",
			"AXIS_Z",
			"ZERO",
			"ONE",
			"INF",
			"GDS",
			"INF",
			"LEFT",
			"RIGHT",
			"UP",
			"DOWN",
			"FORWARD",
			"MODEL_FRONT",
			"BACK",
			"MODEL_LEFT",
			"MODEL_RIGHT",
			"MODEL_TOP",
			"MODEL_BOTTOM",
			"MODEL_FRONT",
			"MODEL_REAR",
		],
	},
	{
		"class": "Vector3i",
	},
	{
		"class": "Vector4",
		"constants": [
			"AXIS_W",
		],
	},
	{
		"class": "Vector4i",
	},
	{
		"class": "Key",
	},
]


static func to_list_of_methods(raw : String) -> String:
	var methods : String
	
	var lines : PackedStringArray = raw.split("\n")
	for line in lines:
		var idx : int = line.find("(")
		if idx != -1:
			methods += '\n"' + line.substr(0, idx).replace(" ", "") + '",'
	
	return methods
